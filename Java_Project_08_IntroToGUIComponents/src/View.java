import javafx.application.Application;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.stage.Stage;
//import edu.frontrange.util.javafx.message.MessageDisplay;

/**
 * This class sets the layout and opens a window of the GUI. It also provides
 * the information that connects each of the controls to the Controller class.
 *
 * @author	William Archbold, S02369823
 * @version	2018-10-29, CSC-240 Assignment 8, View.java
 */
public class View extends Application
{
/**
 * The view (as first generated by the FXML set up).
 *
 * @param stage			the window provided by JavaFX
 * @throws Exception	any exception arising from Application starting
 */
@Override
public void start(Stage stage) throws Exception
{
	/* Ensure messages are displayed in this window. */
	//MessageDisplay.setStage(stage);

	/* The FXML Loader processes the given .fxml file, and uses the information
	   there to create the controller, set up all the fields labeled @FXML,
	   and then calls the initialize method of that Controller.

	   Once that is done, the FXML Loader continues with laying out the specified
	   containers and controls within the root node of the window, and returns
	   that node as the result. */
        /*
        FXMLLoader loader = new FXMLLoader(getClass().getResource("TemperatureConversion.fxml"));
        loader.setRoot(this);
        loader.setController(this);
        loader.load();
        */
        
        Parent root = FXMLLoader.load(getClass().getResource("TemperatureConversion.fxml"));
         
	/* Inform the scene (content of the window) of the root node. */
	Scene scene = new Scene(root);
	/* Set up the title for the application window. */
	stage.setTitle("Temperature Conversion (FXML)");
	/* Inform the stage of the scene it is to display, and show it. */
	stage.setScene(scene);
	stage.show();
}
}
